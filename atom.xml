<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://mason-xu.github.io/</id>
    <title>Ma5on的Blog</title>
    <updated>2020-07-17T02:09:21.839Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://mason-xu.github.io/"/>
    <link rel="self" href="https://mason-xu.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://mason-xu.github.io/images/avatar.png</logo>
    <icon>https://mason-xu.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Ma5on的Blog</rights>
    <entry>
        <title type="html"><![CDATA[SpringBoot 定时任务]]></title>
        <id>https://mason-xu.github.io/post/springboot-ding-shi-ren-wu</id>
        <link href="https://mason-xu.github.io/post/springboot-ding-shi-ren-wu">
        </link>
        <updated>2020-07-17T01:50:45.000Z</updated>
        <content type="html"><![CDATA[<p>在SpringbootApplication添加注解@EnableScheduling</p>
<pre><code class="language-java">@SpringBootApplication
@ServletComponentScan
@EnableSwagger2
@EnableScheduling //定时任务注解 
public class SpringbootApplication extends SpringBootServletInitializer {

    public static void main(String[] args) {
        SpringApplication.run(SpringbootApplication.class, args);
    }
    
}
</code></pre>
<figure data-type="image" tabindex="1"><a href="https://zhuanlan.zhihu.com/p/79644891"><img src="https://img.shields.io/badge/%E7%9F%A5%E4%B9%8E-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E6%95%99%E7%A8%8B-blue" alt="" loading="lazy"></a></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[SpringBoot使用Swagger]]></title>
        <id>https://mason-xu.github.io/post/springboot-shi-yong-swagger</id>
        <link href="https://mason-xu.github.io/post/springboot-shi-yong-swagger">
        </link>
        <updated>2020-07-15T23:31:25.000Z</updated>
        <content type="html"><![CDATA[<p>添加依赖</p>
<pre><code class="language-xml">		&lt;!--swagger2 ui--&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;io.springfox&lt;/groupId&gt;
            &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt;
            &lt;version&gt;${springfox-swagger2.version}&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;io.springfox&lt;/groupId&gt;
            &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt;
            &lt;version&gt;${springfox-swagger-ui.version}&lt;/version&gt;
        &lt;/dependency&gt;
</code></pre>
<p>版本</p>
<pre><code class="language-xml">	&lt;properties&gt;
        &lt;springfox-swagger2.version&gt;2.6.1&lt;/springfox-swagger2.version&gt;
        &lt;springfox-swagger-ui.version&gt;2.6.1&lt;/springfox-swagger-ui.version&gt;
    &lt;/properties&gt;
</code></pre>
<p>Swagger配置swaggerConfig</p>
<pre><code class="language-java">import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.core.Ordered;
import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;
import org.springframework.web.servlet.config.annotation.ViewControllerRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;
import springfox.documentation.builders.ApiInfoBuilder;
import springfox.documentation.builders.PathSelectors;
import springfox.documentation.builders.RequestHandlerSelectors;
import springfox.documentation.service.ApiInfo;
import springfox.documentation.spi.DocumentationType;
import springfox.documentation.spring.web.plugins.Docket;
import springfox.documentation.swagger2.annotations.EnableSwagger2;

@Configuration //说明这是一个配置类
@EnableSwagger2 // 该注解开启Swagger2的自动配置,这个注解也可以注解在SpringbootApplication中
public class SwaggerConfig extends WebMvcConfigurerAdapter {
    @Bean
    public Docket createDocket() {
        return new Docket(DocumentationType.SWAGGER_2)
                .apiInfo(apiInfo())
                .groupName(&quot;admin&quot;)
                .select()
                .apis(RequestHandlerSelectors.basePackage(&quot;com.example.controller&quot;)) // 注意修改此处的包名
                .paths(PathSelectors.any())
                .build();
    }

    private ApiInfo apiInfo() {
        return new ApiInfoBuilder()
                .title(&quot;项目名称&quot;)
                .description(&quot;API接口&quot;)
//                .termsOfServiceUrl(&quot;http://www.intetex.com/&quot;)
                .version(&quot;1.1.0&quot;)
                .build();
    }
    //添加swagger-ui.html映射
    @Override
    public void addResourceHandlers(ResourceHandlerRegistry registry) {
        registry.addResourceHandler(&quot;swagger-ui.html&quot;)
                .addResourceLocations(&quot;classpath:/META-INF/resources/&quot;);

        registry.addResourceHandler(&quot;/webjars/**&quot;)
                .addResourceLocations(&quot;classpath:/META-INF/resources/webjars/&quot;);
    }
    //指定swagger-ui.html为index
    @Override
    public void addViewControllers( ViewControllerRegistry registry ) {
        registry.addViewController( &quot;/&quot; ).setViewName( &quot;redirect:/swagger-ui.html&quot; );
        registry.setOrder( Ordered.HIGHEST_PRECEDENCE );
        super.addViewControllers( registry );
    }
}

</code></pre>
<p>Controller添加注解</p>
<pre><code class="language-java">import com.mason.springboot.mapper.CategoryMapper;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

import javax.annotation.Resource;

@RestController
@Api(description = &quot;swagger测试&quot;) // 1.5版本后推荐使用tags,description已过时
public class CategoryController {
    @Autowired
    CategoryMapper categoryMapper;

    @GetMapping(&quot;/getCategoryList&quot;)
    @ApiOperation(&quot;获取产品分类&quot;)
    public String listCategory(){
//        return categoryMapper.getList();
        return &quot;产品分类&quot;;
    }
}

</code></pre>
<figure data-type="image" tabindex="1"><img src="https://gitee.com/mason-xu/PicRepo/raw/master/2020-7/swagger.png" alt="效果" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Shiro 获取securityManager 过期方法更新]]></title>
        <id>https://mason-xu.github.io/post/shiro-huo-qu-securitymanager-guo-qi-fang-fa-geng-xin</id>
        <link href="https://mason-xu.github.io/post/shiro-huo-qu-securitymanager-guo-qi-fang-fa-geng-xin">
        </link>
        <updated>2020-05-09T16:09:07.000Z</updated>
        <content type="html"><![CDATA[<p><s>过期方法， Factory<SecurityManager> factory = new IniSecurityManagerFactory已废除</s></p>
<pre><code class="language-java">private static Subject getSubject(User user) {
        //加载配置文件，并获取工厂
        Factory&lt;SecurityManager&gt; factory = new IniSecurityManagerFactory(&quot;classpath:shiro.ini&quot;);
        //获取安全管理者实例
        SecurityManager sm = factory.getInstance();
        //将安全管理者放入全局对象
        SecurityUtils.setSecurityManager(sm);
        //全局对象通过安全管理者生成Subject对象
        Subject subject = SecurityUtils.getSubject();

        return subject;
    }
</code></pre>
<p>更新方法</p>
<pre><code class="language-java">private static Subject getSubject(User user) {
        //获取安全管理者实例,获取本地资源文件,设置realm为本地的资源文件
        DefaultSecurityManager defaultSecurityManager = new DefaultSecurityManager();
        IniRealm iniRealm = new IniRealm(&quot;classpath:shiro.ini&quot;);
        defaultSecurityManager.setRealm(iniRealm);
        //将安全管理者放入全局对象
        SecurityUtils.setSecurityManager(defaultSecurityManager);
        //全局对象通过安全管理者生成Subject对象
        Subject subject = SecurityUtils.getSubject();

        return subject;
    }
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[SpringBoot项目支持JSP]]></title>
        <id>https://mason-xu.github.io/post/springboot-xiang-mu-zhi-chi-jsp</id>
        <link href="https://mason-xu.github.io/post/springboot-xiang-mu-zhi-chi-jsp">
        </link>
        <updated>2020-05-02T10:42:18.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li>SpringBoot项目文件pom.xml添加依赖</li>
</ol>
<pre><code class="language-xml">&lt;!-- 引入jsp对 servlet的支持--&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;javax.servlet&lt;/groupId&gt;
            &lt;artifactId&gt;javax.servlet-api&lt;/artifactId&gt;
        &lt;/dependency&gt;
&lt;!-- 添加JSTL maven,需要jtsl标签处理页面逻辑--&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;javax.servlet&lt;/groupId&gt;
            &lt;artifactId&gt;jstl&lt;/artifactId&gt;
        &lt;/dependency&gt;
&lt;!-- 添加JSP maven依赖--&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.apache.tomcat.embed&lt;/groupId&gt;
            &lt;artifactId&gt;tomcat-embed-jasper&lt;/artifactId&gt;
        &lt;/dependency&gt;
</code></pre>
<ol start="2">
<li>
<p>添加好后会出现红色错误 , 需要maven Reimport<br>
<img src="https://github.com/Mason-Xu/PicRepo/blob/master/2020-5/SpringbootMaven1.png?raw=true" alt="" loading="lazy"></p>
</li>
<li>
<p>修改resources下的application.properties,让springmvc支出视图的跳转目录指向为/main/webapp/jsp</p>
</li>
</ol>
<pre><code>spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp
</code></pre>
<ol start="4">
<li>
<p>修改controlller类 , @Controller , 根据application.properties中的视图重定向 , 返回jsp文件名</p>
</li>
<li>
<p>在main/webapp/WEB-INF/jsp 目录下新建jsp文件<br>
<img src="https://github.com/Mason-Xu/PicRepo/blob/master/2020-5/SpringbootMaven2.png?raw=true" alt="" loading="lazy"></p>
</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何做到沉浸式状态栏---更加准确的说是透明状态栏 Translucent Bar  ]]></title>
        <id>https://mason-xu.github.io/post/ru-he-zuo-dao-chen-jin-shi-zhuang-tai-lan-geng-jia-zhun-que-de-shuo-shi-tou-ming-zhuang-tai-lan-translucent-bar</id>
        <link href="https://mason-xu.github.io/post/ru-he-zuo-dao-chen-jin-shi-zhuang-tai-lan-geng-jia-zhun-que-de-shuo-shi-tou-ming-zhuang-tai-lan-translucent-bar">
        </link>
        <updated>2020-05-01T10:59:18.000Z</updated>
        <content type="html"><![CDATA[<h2 id="1设置imageview图片-高宽-match_parent-但是没有隐藏actionbar">1.设置imageView图片 高宽 match_parent  但是没有隐藏ActionBar</h2>
<h2 id="2透明状态栏和隐藏actionbar">2.透明状态栏和隐藏ActionBar</h2>
<ul>
<li>在activity文件中添加</li>
</ul>
<pre><code class="language-java">// 显示activity_main布局
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);

//透明状态栏
if (Build.VERSION.SDK_INT &gt;= 21) {
    View decorView = getWindow().getDecorView();
    int option = View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN
            | View.SYSTEM_UI_FLAG_LAYOUT_STABLE;
    decorView.setSystemUiVisibility(option);
    getWindow().setStatusBarColor(Color.TRANSPARENT);
}

// 隐藏系统自带应用栏
ActionBar actionBar = getSupportActionBar();
actionBar.hide();
</code></pre>
<ol>
<li>这种效果只有5.0及以上系统支持</li>
<li>使用了SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN和SYSTEM_UI_FLAG_LAYOUT_STABLE，注意两个Flag必须要结合在一起使用，表示会让应用的主体内容占用系统状态栏的空间</li>
<li>最后再调用Window的setStatusBarColor()方法将状态栏设置成透明色就可以了。</li>
</ol>
<blockquote>
<p>需要注意的是，这一种变成透明状态栏的方法要注意你设置的自定义的ActionBar(一般为56dp)的高度要加上状态栏的高度（一般为20dp)</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[浏览器从服务器或客户端获取内容]]></title>
        <id>https://mason-xu.github.io/post/liu-lan-qi-cong-fu-wu-qi-huo-ke-hu-duan-huo-qu-nei-rong</id>
        <link href="https://mason-xu.github.io/post/liu-lan-qi-cong-fu-wu-qi-huo-ke-hu-duan-huo-qu-nei-rong">
        </link>
        <updated>2020-04-28T14:50:25.000Z</updated>
        <content type="html"><![CDATA[<p><code>${param.name} 等价于 request.getParamter(&quot;name&quot;)</code>，这两种方法一般用于服务器从页面或者客户端获取的内容。</p>
<p><code>${requestScope.name} 等价于 request.getAttribute(&quot;name&quot;)</code>，一般是从服务器传递结果到页面，在页面中取出服务器保存的值。</p>
<table>
<thead>
<tr>
<th>🍕</th>
<th>🍔</th>
</tr>
</thead>
<tbody>
<tr>
<td>作者</td>
<td>Ma5on</td>
</tr>
<tr>
<td>时间</td>
<td>2020年4月28日</td>
</tr>
<tr>
<td>标签</td>
<td>Java ; JSP ;</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[get和post的区别]]></title>
        <id>https://mason-xu.github.io/post/get-he-post-de-qu-bie</id>
        <link href="https://mason-xu.github.io/post/get-he-post-de-qu-bie">
        </link>
        <updated>2020-04-16T03:24:48.000Z</updated>
        <content type="html"><![CDATA[<h2 id="get">get</h2>
<ul>
<li>是form默认的提交方式</li>
<li>如果通过一个超链访问某个地址，是get方式</li>
<li>如果在地址栏直接输入某个地址，是get方式</li>
<li>提交数据会在浏览器显示出来</li>
<li>不可以用于提交二进制数据，比如上传文件</li>
</ul>
<h2 id="post">post</h2>
<p>-必须在form上通过 method=&quot;post&quot; 显示指定</p>
<ul>
<li>提交数据不会在浏览器显示出来</li>
<li>可以用于提交二进制数据，比如上传文件</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[HTML JSP文件里 Id 和 Class 选择器的使用]]></title>
        <id>https://mason-xu.github.io/post/html-jsp-wen-jian-li-id-he-class-xuan-ze-qi-de-shi-yong</id>
        <link href="https://mason-xu.github.io/post/html-jsp-wen-jian-li-id-he-class-xuan-ze-qi-de-shi-yong">
        </link>
        <updated>2020-04-12T03:23:08.000Z</updated>
        <content type="html"><![CDATA[<p>简单点来说就是<br>
id给js用<br>
class用在css<br>
<img src="https://mason-xu.github.io//post-images/1586662716064.png" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[电脑和安卓手机使用SMB局域网快速互传文件,在线观看视频]]></title>
        <id>https://mason-xu.github.io/post/dian-nao-he-an-zhuo-shou-ji-shi-yong-smb-ju-yu-wang-kuai-su-hu-chuan-wen-jian-zai-xian-guan-kan-shi-pin</id>
        <link href="https://mason-xu.github.io/post/dian-nao-he-an-zhuo-shou-ji-shi-yong-smb-ju-yu-wang-kuai-su-hu-chuan-wen-jian-zai-xian-guan-kan-shi-pin">
        </link>
        <updated>2020-03-26T04:40:23.000Z</updated>
        <content type="html"><![CDATA[<h2 id="1在电脑新建一个文件夹">1.在电脑新建一个文件夹</h2>
<figure data-type="image" tabindex="1"><img src="https://github.com/Mason-Xu/PicRepo/blob/master/2020-3/SMB1.png?raw=true" alt="" loading="lazy"></figure>
<h2 id="2文件夹属性设置共享-高级共享">2.文件夹属性设置共享. 高级共享</h2>
<figure data-type="image" tabindex="2"><img src="https://github.com/Mason-Xu/PicRepo/blob/master/2020-3/SMB2.png?raw=true" alt="" loading="lazy"></figure>
<h2 id="3添加一个用户设置权限">3.添加一个用户,设置权限</h2>
<p><img src="https://github.com/Mason-Xu/PicRepo/blob/master/2020-3/SMB3.png?raw=true" alt="" loading="lazy"><br>
<img src="https://github.com/Mason-Xu/PicRepo/blob/master/2020-3/SMB4.png?raw=true" alt="" loading="lazy"></p>
<h2 id="4回到共享页面">4.回到共享页面</h2>
<figure data-type="image" tabindex="3"><img src="https://github.com/Mason-Xu/PicRepo/blob/master/2020-3/SMB5.png?raw=true" alt="" loading="lazy"></figure>
<h2 id="5创建新用户">5.创建新用户</h2>
<figure data-type="image" tabindex="4"><img src="https://github.com/Mason-Xu/PicRepo/blob/master/2020-3/SMB6.png?raw=true" alt="" loading="lazy"></figure>
<h2 id="6控制面板添加其他账户">6.控制面板添加其他账户</h2>
<p><img src="https://github.com/Mason-Xu/PicRepo/blob/master/2020-3/SMB7.png?raw=true" alt="" loading="lazy"><br>
<img src="https://github.com/Mason-Xu/PicRepo/blob/master/2020-3/SMB8.png?raw=true" alt="" loading="lazy"><br>
<img src="https://github.com/Mason-Xu/PicRepo/blob/master/2020-3/SMB9.png?raw=true" alt="" loading="lazy"></p>
<h2 id="7选择新创建的用户">7.选择新创建的用户</h2>
<figure data-type="image" tabindex="5"><img src="https://github.com/Mason-Xu/PicRepo/blob/master/2020-3/SMB10%20.png?raw=true" alt="" loading="lazy"></figure>
<h2 id="8设置新用户的权限">8.设置新用户的权限</h2>
<figure data-type="image" tabindex="6"><img src="https://github.com/Mason-Xu/PicRepo/blob/master/2020-3/SMB11%20.png?raw=true" alt="" loading="lazy"></figure>
<h2 id="9获取本机ip地址">9.获取本机ip地址</h2>
<figure data-type="image" tabindex="7"><img src="https://github.com/Mason-Xu/PicRepo/blob/master/2020-3/SMB12%20.png?raw=true" alt="" loading="lazy"></figure>
<h2 id="10小米文件管理app连接smb">10.小米文件管理APP连接SMB</h2>
<figure data-type="image" tabindex="8"><img src="https://github.com/Mason-Xu/PicRepo/blob/master/2020-3/SMB13%20.png?raw=true" alt="" loading="lazy"></figure>
<h2 id="11mxplayer连接smb-在线看视频">11.MXplayer连接SMB 在线看视频</h2>
<figure data-type="image" tabindex="9"><img src="https://github.com/Mason-Xu/PicRepo/blob/master/2020-3/SMB14%20.png?raw=true" alt="" loading="lazy"></figure>
<iframe 
    width="1080" 
    height="720" 
    src="https://www.bilibili.com/video/BV1c7411m71U/"
    frameborder="0" 
    allowfullscreen>
</iframe>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[IDEA的Mysql数据库设置]]></title>
        <id>https://mason-xu.github.io/post/idea-de-mysql-shu-ju-ku-she-zhi</id>
        <link href="https://mason-xu.github.io/post/idea-de-mysql-shu-ju-ku-she-zhi">
        </link>
        <updated>2020-03-17T11:16:55.000Z</updated>
        <content type="html"><![CDATA[<p>titles: &quot;视频解析看视频&quot;<br>
date: 2018-01-20T 16:25:52<br>
tags: [video]<br>
categories: [video]</p>
<h2 id="第一次idea连接mysql出现错误">第一次IDEA连接Mysql出现错误</h2>
<figure data-type="image" tabindex="1"><img src="https://github.com/Mason-Xu/PicRepo/blob/master/2020-3/idea_mysql_setting_1.png?raw=true" alt="" loading="lazy"></figure>
<h2 id="需要改变mysql的drive版本">需要改变Mysql的Drive版本</h2>
<p><img src="https://github.com/Mason-Xu/PicRepo/blob/master/2020-3/idea_mysql_setting_2.png?raw=true" alt="" loading="lazy">s</p>
]]></content>
    </entry>
</feed>